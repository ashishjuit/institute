=================
Projects Overview
=================

.. seealso:: ":doc:`in-progress`" for an overview of projects in the
   development stage, and ":doc:`contact`" if you want to have your
   project included in the Institute.

.. content::
   :backlinks: none
   :local:


Book
----

Systems Administration for Cyborgs
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

*Systems Administration for Cyobrgs* provides an introduction for
technical audiences to basic systems administration concepts and
problem domains.

*Systems Administration for Cyobrgs* addresses topics that include:

- database scaling,
- monitoring,
- high availability,
- backups,
- dev-ops,
- production/testing environments,
- web services, and
- "the cloud."

Additionally several chapters provide an overview of the history of
contemporary technology as well as the basic strategy, tactics, and
required skills for systems administration.

For more information:

- :project:`Systems Administration for Cyborgs <administration>`
- `SAfC source repository <http://git.cyborginstitute.net/?p=administration.git>`_
- `SAfC source repository on github <http://github.com/cyborginstitute/administration>`_

Software
--------

``dtf``, a Documentation Testing Framework
------------------------------------------

dtf is a test runner, designed to help coordinate and enforce
consistency requirements for large documentation projects, though its
implementation may be more broadly useful. Ideally dtf will help
facilitate easy, regular and automated testing for documentation
source and production output, and ease the burden burden of manual
consistency editing and checking, and help increase the quality of
tests without increasing the workload for editors and documentation
maintainers.

For more information:

- :project:`dtf documentation </dtf>`
- `dtf pakages on PyPI <https://pypi.python.org/pypi/dtf>`_
- `dtf issue tracker <https://issues.cyborginstitute.net/describecomponents.cgi?product=dtf>`_
- `dtf source repository <http://github.com/cyborginstitute/dtf/>`_
- `dtf github repository <http://github.com/cyborginstitute/dtf/>`_

Buildfile Generator, a Makefile Automation
------------------------------------------

Buildfile Generator is a simple lightweight interface to generate
Makefiles by writing Python code. Buildfile doesn't have any specific
"knowledge" of how to process any specific input or output file. build
any specific kind of file, and is generic with regards to the kinds of
build processes it is applicable. From a high level, exists to make:
potentially complex or repetitive build systems more manageable,
maintainable, and clear than would be otherwise possible using native
Make syntax, with more flexibility than you would have with a
Make-replacement.

- :project:`Buildcloth <buildcloth>`
- `github buildfile-generator repository <http://github.com/tychoish/buildfile-generator>`_

..
   ``csc``, the Cyborg Site Compiler
   ---------------------------------

   ``csc`` springs from a collection of experiences with various
   available static site compilers. [#static-site-compilers]_ optimized
   for incremental builds, flexible indexing and page aggregation
   features.

   - `csc project page and documentation <http://cyborginstitute.com/projects/csc>`_
   - `csc source repository <http://git.cyborginstitute.net/?p=csc.git>`_
   - `csc source repository on github <http://github.com/cyborginstitute/csc>`_

   .. [#static-site-compilers] "Static Site Compilers" are tools that
      generate websites based on templates and source files in a
      lightweight markup language.

Legacy Projects
---------------

The represent cool projects from the past that are just here for
archival purposes.
stl, a Personal Logging Script
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

A tool that collects data about project word counts along with
arbitrary logging.

- `stl project page <http://cyborginstitute.com/projects/stl>`_
- `stl source repository <http://git.cyborginstitute.net/?p=stl.git>`_
- `stl source repository on github <http://github.com/cyborginstitute/stl>`_

.. _`Sphinx`: http://sphinx.pocoo.org/

Desktop Configuration Stack
~~~~~~~~~~~~~~~~~~~~~~~~~~~

A collection of configuration files for Emacs and StumpWM as a
starting point for new users.

- `Stack project page <http://cyborginstitute.com/projects/stack>`_
- `Stack source repository <http://git.cyborginstitute.net/?p=stack.git>`_
- `Stack source repository on github <http://github.com/tychoish/stack>`_

Taskfile
~~~~~~~~

A half-baked, but thoroughly documented attempt to use `GNU Make
<http://www.gnu.org/software/make/>`_ to compile a task list, from
items embedded in a project's source files.

- `Taskfile project page and documentation <http://cyborginstitute.com/projects/taskfile>`_
- `Taskfile source repository <http://git.cyborginstitute.net/?p=tasfile.git>`_
- `Taskfile source repository on github <http://github.com/cyborginstitute/taskfile/>`_

.. _`ikiwiki`: http://ikiwiki.info
.. _`Gollum`: https://github.com/github/gollum
